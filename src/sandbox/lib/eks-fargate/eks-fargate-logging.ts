import * as cdk8s from 'cdk8s';
import * as constructs from 'constructs';
import * as kplus from 'cdk8s-plus-21';

import { KubeNamespace } from './imports/k8s'; // Please note the file of ./imports/k8s.ts is generated by the command of "cdk8s import k8s  -l typescript"

export class EksFargateLogging extends cdk8s.Chart {
    constructor(
        scope: constructs.Construct,
        id: string,
    ) {
        super(scope, id);

        const eksFargateLoggingNamespace = 'aws-observability';
        const namespace = new KubeNamespace(this, eksFargateLoggingNamespace, {
            metadata: {
                name: eksFargateLoggingNamespace,
                labels: {
                    'aws-observability': 'enabled'
                }
            },
        });

        const region = 'ap-southeast-2'
        const cmArray: Array<string> = [
            '[OUTPUT]',
            '    Name cloudwatch_logs',
            '    Match   *',
            `    region ${region}`,
            '    log_group_name fluent-bit-cloudwatch',
            '    log_stream_prefix from-fluent-bit-',
            '    auto_create_group true'
        ];
        const cmString = cmArray.join('\n');
        const cmName = 'aws-logging';

        const loggingConfigMap = new kplus.ConfigMap(this, cmName, {
            metadata: {
                name: cmName,
                namespace: eksFargateLoggingNamespace,
            },
            data: {
                'output.conf': cmString
            }
        });
    }
}
